/*
Write a JavaScript function findCardFrequency(value) that that accepts the following
 parameters: array of several cards (face + suit), separated by a space. The function
 calculates and prints at the console the frequency of each card face in format 
 "card_face -> frequency". The frequency is calculated by the formula appearances / N 
 and is expressed in percentages with exactly 2 digits after the decimal point. The card 
 faces with their frequency should be printed in the order of the card face's first 
 appearance in the input. The same card can appear multiple times in the input, but 
 its face should be listed only once in the output. Write JS program cardFrequencies.js 
 that invokes your function with the sample input data below and prints the output at 
 the console. 
*/


function findCardFrequency(param){
	
	arrInput = param.split(/[♥♣♦♠ ]/);
	arrInput = arrInput.filter(Boolean);						//remove "" form array
	
	var n = arrInput.length;                					// card/n = frequencies
	var countCards = [];
	var i=0; 													//count loop #1
	var j=0														//count loop #2
	
	for(i; i < n; i++){											//loop #1
		if(!(arrInput[i] in countCards)){
			countCards[arrInput[i]] = 1;
		}else{
			countCards[arrInput[i]] = countCards[arrInput[i]] + 1;
		}
	}
	
	var uniqueArray = arrInput.filter(function(elem, pos) {     //remove repeated elements in arrInput
		return arrInput.indexOf(elem) == pos;
	})
	
	for(j; j< uniqueArray.length; j++){                         //loop #2 
		if(uniqueArray[j] in countCards){
			console.log(uniqueArray[j] + ' -> ' + ((countCards[uniqueArray[j]]/n)*100).toFixed(2) + '%');
		}
	}
	console.log();
}

findCardFrequency('8♥ 2♣ 4♦ 10♦ J♥ A♠ K♦ 10♥ K♠ K♦');
findCardFrequency('J♥ 2♣ 2♦ 2♥ 2♦ 2♠ 2♦ J♥ 2♠');
findCardFrequency('10♣ 10♥');
